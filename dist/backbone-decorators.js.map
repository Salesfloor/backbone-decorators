{"version":3,"sources":["backbone-decorators.js","src/backbone-decorators.js"],"names":[],"mappings":"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","file":"backbone-decorators.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('underscore')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'underscore'], factory) :\n    factory((global.Decorators = {}), global._)\n}(this, function (exports, _) { 'use strict';\n\n    _ = ('default' in _ ? _['default'] : _);\n\n    /* Ideally we'd want to just pass these exports through directly\n     * but Babel complains about nesting exports, so we attach them\n     * to a namespace\n     */\n\n    // Backbone Decorators\n\n    // Views\n\n    function on(eventName) {\n        return function(target, name, descriptor) {\n            if (!target.events) {\n                target.events = {};\n            }\n            if (_.isFunction(target.events)) {\n                throw new Error('The on decorator is not compatible with an events method');\n                return;\n            }\n            if (!eventName) {\n                throw new Error('The on decorator requires an eventName argument');\n            }\n            target.events[eventName] = name;\n            return descriptor;\n        };\n    }\n\n    function tagName(value) {\n        return function decorator(target) {\n            target.prototype.tagName = value;\n        };\n    }\n\n    // Marionette Decorators\n\n    // Views\n\n    function onModel(eventName) {\n        return function(target, name, descriptor) {\n            if (!target.modelEvents) {\n                target.modelEvents = {};\n            }\n            if (_.isFunction(target.modelEvents)) {\n                throw new Error('The onModel decorator is not compatible with a modelEvents method');\n                return;\n            }\n            if (!eventName) {\n                throw new Error('The onModel decorator requires an eventName argument');\n            }\n            target.modelEvents[eventName] = name;\n            return descriptor;\n        };\n    }\n\n    function onCollection(eventName) {\n        return function(target, name, descriptor) {\n            if (!target.collectionEvents) {\n                target.collectionEvents = {};\n            }\n            if (_.isFunction(target.collectionEvents)) {\n                throw new Error('The onCollection decorator is not compatible with a collectionEvents method');\n                return;\n            }\n            if (!eventName) {\n                throw new Error('The onCollection decorator requires an eventName argument');\n            }\n            target.collectionEvents[eventName] = name;\n            return descriptor;\n        };\n    }\n\n    function template(value) {\n        return function decorator(target) {\n            target.prototype.template = value;\n        };\n    }\n\n    function childView(value) {\n        return function decorator(target) {\n            target.prototype.childView = value;\n        };\n    }\n\n    function childViewContainer(value) {\n        return function decorator(target) {\n            target.prototype.childViewContainer = value;\n        };\n    }\n\n    function ui(...args) {\n        return function decorator(target) {\n            let ui = target.prototype.ui || {};\n            let [key, value] = args;\n            if (_.isObject(key)) {\n                _.extend(ui, args[0]);\n            } else if (_.isString(key) && _.isString(value)) {\n                ui[key] = value;\n            } else {\n                throw new Error('The ui decorator takes either a single object as an argument or a key and value string');\n            }\n            target.prototype.ui = ui;\n        };\n    }\n\n    // Utility Decorators\n\n    function useSuper(target, name, descriptor) {\n        let superMethod = Object.getPrototypeOf(target)[name];\n        if (_.isFunction(superMethod)) {\n            descriptor.value = function(...args) {\n                superMethod.apply(this, args);\n            };\n        } else {\n            throw new Error('The useSuper method requires the parent class to implement this function somewhere on its prototype chain');\n        }\n        return descriptor;\n    }\n\n    exports.on = on;\n    exports.tagName = tagName;\n    exports.onModel = onModel;\n    exports.onCollection = onCollection;\n    exports.template = template;\n    exports.childView = childView;\n    exports.childViewContainer = childViewContainer;\n    exports.ui = ui;\n    exports.useSuper = useSuper;\n\n}));\n","import _ from 'underscore';\n\n/* Ideally we'd want to just pass these exports through directly\n * but Babel complains about nesting exports, so we attach them\n * to a namespace\n */\n\n// Backbone Decorators\n\n// Views\n\nexport function on(eventName) {\n    return function(target, name, descriptor) {\n        if (!target.events) {\n            target.events = {};\n        }\n        if (_.isFunction(target.events)) {\n            throw new Error('The on decorator is not compatible with an events method');\n            return;\n        }\n        if (!eventName) {\n            throw new Error('The on decorator requires an eventName argument');\n        }\n        target.events[eventName] = name;\n        return descriptor;\n    };\n}\n\nexport function tagName(value) {\n    return function decorator(target) {\n        target.prototype.tagName = value;\n    };\n}\n\n// Marionette Decorators\n\n// Views\n\nexport function onModel(eventName) {\n    return function(target, name, descriptor) {\n        if (!target.modelEvents) {\n            target.modelEvents = {};\n        }\n        if (_.isFunction(target.modelEvents)) {\n            throw new Error('The onModel decorator is not compatible with a modelEvents method');\n            return;\n        }\n        if (!eventName) {\n            throw new Error('The onModel decorator requires an eventName argument');\n        }\n        target.modelEvents[eventName] = name;\n        return descriptor;\n    };\n}\n\nexport function onCollection(eventName) {\n    return function(target, name, descriptor) {\n        if (!target.collectionEvents) {\n            target.collectionEvents = {};\n        }\n        if (_.isFunction(target.collectionEvents)) {\n            throw new Error('The onCollection decorator is not compatible with a collectionEvents method');\n            return;\n        }\n        if (!eventName) {\n            throw new Error('The onCollection decorator requires an eventName argument');\n        }\n        target.collectionEvents[eventName] = name;\n        return descriptor;\n    };\n}\n\nexport function template(value) {\n    return function decorator(target) {\n        target.prototype.template = value;\n    };\n}\n\nexport function childView(value) {\n    return function decorator(target) {\n        target.prototype.childView = value;\n    };\n}\n\nexport function childViewContainer(value) {\n    return function decorator(target) {\n        target.prototype.childViewContainer = value;\n    };\n}\n\nexport function ui(...args) {\n    return function decorator(target) {\n        let ui = target.prototype.ui || {};\n        let [key, value] = args;\n        if (_.isObject(key)) {\n            _.extend(ui, args[0]);\n        } else if (_.isString(key) && _.isString(value)) {\n            ui[key] = value;\n        } else {\n            throw new Error('The ui decorator takes either a single object as an argument or a key and value string');\n        }\n        target.prototype.ui = ui;\n    };\n}\n\n// Utility Decorators\n\nexport function useSuper(target, name, descriptor) {\n    let superMethod = Object.getPrototypeOf(target)[name];\n    if (_.isFunction(superMethod)) {\n        descriptor.value = function(...args) {\n            superMethod.apply(this, args);\n        };\n    } else {\n        throw new Error('The useSuper method requires the parent class to implement this function somewhere on its prototype chain');\n    }\n    return descriptor;\n}\n"],"sourceRoot":"/source/"}