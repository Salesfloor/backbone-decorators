{"version":3,"sources":["/source/backbone-decorators.js","/source/src/backbone-decorators.js","backbone-decorators.min.js"],"names":["global","factory","exports","module","require","define","amd","Decorators","_","Backbone","this","on","eventName","target","name","descriptor","events","isFunction","Error","tagName","value","prototype","model","modelClass","Model","comparator","comparatorString","isString","defaults","_len","arguments","length","args","Array","_key","key","isObject","extend","isUndefined","route","routeName","routes","onModel","modelEvents","onCollection","collectionEvents","template","childView","childViewContainer","ui","_len2","_key2","useSuper","superMethod","Object","getPrototypeOf","_len3","_key3","apply","localStorage","storageKey","LocalStorage","replyRadio","channel","requestString","radioRequests"],"mappings":"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","file":"backbone-decorators.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('underscore'), require('backbone')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'underscore', 'backbone'], factory) :\n    factory((global.Decorators = {}), global._, global.Backbone)\n}(this, function (exports, _, Backbone) { 'use strict';\n\n    _ = ('default' in _ ? _['default'] : _);\n    Backbone = ('default' in Backbone ? Backbone['default'] : Backbone);\n\n    /* Ideally we'd want to just pass these exports through directly\n     * but Babel complains about nesting exports, so we attach them\n     * to a namespace\n     */\n\n    // Backbone Decorators\n\n    // Views\n\n    function on(eventName) {\n        return function(target, name, descriptor) {\n            if (!target.events) {\n                target.events = {};\n            }\n            if (_.isFunction(target.events)) {\n                throw new Error('The on decorator is not compatible with an events method');\n                return;\n            }\n            if (!eventName) {\n                throw new Error('The on decorator requires an eventName argument');\n            }\n            target.events[eventName] = name;\n            return descriptor;\n        };\n    }\n\n    function tagName(value) {\n        return function decorator(target) {\n            target.prototype.tagName = value;\n        };\n    }\n\n    //Collections\n\n    function model(modelClass) {\n        return function decorator(target) {\n            if (modelClass.prototype instanceof Backbone.Model) {\n                target.prototype.model = modelClass;\n            } else {\n                throw new Error('The model decorator takes either a single argument that should be an instance of Backbone.Model');\n            }\n        };\n    }\n\n    function comparator(comparatorString) {\n        return function decorator(target) {\n            if (_.isString(comparatorString)) {\n                target.prototype.comparator = comparatorString;\n            } else {\n                throw new Error('The comparator decorator takes either a single argument that should be a string');\n            }\n        };\n    }\n\n    //Models\n\n    function defaults(...args) {\n        return function decorator(target) {\n            let defaults = target.prototype.defaults || {};\n            let [key, value] = args;\n            if (_.isObject(key)) {\n                _.extend(defaults, key);\n            } else if (_.isString(key) && !_.isUndefined(value)) {\n                defaults[key] = value;\n            } else {\n                throw new Error('The defaults decorator takes either a single object as an argument or a key and value');\n            }\n            target.prototype.defaults = defaults;\n        };\n    }\n\n    //Router\n\n    function route(routeName) {\n        return function(target, name, descriptor) {\n            if (!target.routes) {\n                target.routes = {};\n            }\n            if (_.isFunction(target.routes)) {\n                throw new Error('The route decorator is not compatible with a route method');\n                return;\n            }\n            if (!routeName) {\n                throw new Error('The route decorator requires an route string argument');\n            }\n            target.routes[routeName] = name;\n            return descriptor;\n        };\n    }\n\n    // Marionette Decorators\n\n    // Views\n\n    function onModel(eventName) {\n        return function(target, name, descriptor) {\n            if (!target.modelEvents) {\n                target.modelEvents = {};\n            }\n            if (_.isFunction(target.modelEvents)) {\n                throw new Error('The onModel decorator is not compatible with a modelEvents method');\n                return;\n            }\n            if (!eventName) {\n                throw new Error('The onModel decorator requires an eventName argument');\n            }\n            target.modelEvents[eventName] = name;\n            return descriptor;\n        };\n    }\n\n    function onCollection(eventName) {\n        return function(target, name, descriptor) {\n            if (!target.collectionEvents) {\n                target.collectionEvents = {};\n            }\n            if (_.isFunction(target.collectionEvents)) {\n                throw new Error('The onCollection decorator is not compatible with a collectionEvents method');\n                return;\n            }\n            if (!eventName) {\n                throw new Error('The onCollection decorator requires an eventName argument');\n            }\n            target.collectionEvents[eventName] = name;\n            return descriptor;\n        };\n    }\n\n    function template(value) {\n        return function decorator(target) {\n            target.prototype.template = value;\n        };\n    }\n\n    function childView(value) {\n        return function decorator(target) {\n            target.prototype.childView = value;\n        };\n    }\n\n    function childViewContainer(value) {\n        return function decorator(target) {\n            target.prototype.childViewContainer = value;\n        };\n    }\n\n    function ui(...args) {\n        return function decorator(target) {\n            let ui = target.prototype.ui || {};\n            let [key, value] = args;\n            if (_.isObject(key)) {\n                _.extend(ui, args[0]);\n            } else if (_.isString(key) && _.isString(value)) {\n                ui[key] = value;\n            } else {\n                throw new Error('The ui decorator takes either a single object as an argument or a key and value string');\n            }\n            target.prototype.ui = ui;\n        };\n    }\n\n    // Utility Decorators\n\n    function useSuper(target, name, descriptor) {\n        let superMethod = Object.getPrototypeOf(target)[name];\n        if (_.isFunction(superMethod)) {\n            descriptor.value = function(...args) {\n                superMethod.apply(this, args);\n            };\n        } else {\n            throw new Error('The useSuper method requires the parent class to implement this function somewhere on its prototype chain');\n        }\n        return descriptor;\n    }\n\n    //Backbone.LocalStorage Decorators\n\n    function localStorage(storageKey) {\n        return function decorator(target) {\n            if (Backbone.LocalStorage) {\n                if (_.isString(storageKey)) {\n                    target.prototype.localStorage = new Backbone.LocalStorage(storageKey);\n                } else {\n                    throw new Error('The localStorage decorator requires a single string argument which will serve as the localStorage key');\n                }\n            } else {\n                throw new Error('The localStorage decorator requires Backbone.LocalStorage to have been loaded before use');\n            }\n        };\n    }\n\n    //Marionette-service Decorators\n\n    function replyRadio(channel, requestString) {\n        return function(target, name, descriptor) {\n            if (!target.radioRequests) {\n                target.radioRequests = {};\n            }\n            if (_.isFunction(target.radioRequests)) {\n                throw new Error('The replyRadio decorator is not compatible with a radioRequests method');\n                return;\n            }\n            if (!_.isString(channel) || !_.isString(requestString)) {\n                throw new Error('The replyRadio decorator requires 2 arguments, a channel and a request string.');\n            }\n            target.radioRequests[channel + ' ' + requestString] = name;\n            return descriptor;\n        };\n    }\n\n    exports.on = on;\n    exports.tagName = tagName;\n    exports.model = model;\n    exports.comparator = comparator;\n    exports.defaults = defaults;\n    exports.route = route;\n    exports.onModel = onModel;\n    exports.onCollection = onCollection;\n    exports.template = template;\n    exports.childView = childView;\n    exports.childViewContainer = childViewContainer;\n    exports.ui = ui;\n    exports.useSuper = useSuper;\n    exports.localStorage = localStorage;\n    exports.replyRadio = replyRadio;\n\n}));\n","import _ from 'underscore';\nimport Backbone from 'backbone';\n\n/* Ideally we'd want to just pass these exports through directly\n * but Babel complains about nesting exports, so we attach them\n * to a namespace\n */\n\n// Backbone Decorators\n\n// Views\n\nexport function on(eventName) {\n    return function(target, name, descriptor) {\n        if (!target.events) {\n            target.events = {};\n        }\n        if (_.isFunction(target.events)) {\n            throw new Error('The on decorator is not compatible with an events method');\n            return;\n        }\n        if (!eventName) {\n            throw new Error('The on decorator requires an eventName argument');\n        }\n        target.events[eventName] = name;\n        return descriptor;\n    };\n}\n\nexport function tagName(value) {\n    return function decorator(target) {\n        target.prototype.tagName = value;\n    };\n}\n\n//Collections\n\nexport function model(modelClass) {\n    return function decorator(target) {\n        if (modelClass.prototype instanceof Backbone.Model) {\n            target.prototype.model = modelClass;\n        } else {\n            throw new Error('The model decorator takes either a single argument that should be an instance of Backbone.Model');\n        }\n    };\n}\n\nexport function comparator(comparatorString) {\n    return function decorator(target) {\n        if (_.isString(comparatorString)) {\n            target.prototype.comparator = comparatorString;\n        } else {\n            throw new Error('The comparator decorator takes either a single argument that should be a string');\n        }\n    };\n}\n\n//Models\n\nexport function defaults(...args) {\n    return function decorator(target) {\n        let defaults = target.prototype.defaults || {};\n        let [key, value] = args;\n        if (_.isObject(key)) {\n            _.extend(defaults, key);\n        } else if (_.isString(key) && !_.isUndefined(value)) {\n            defaults[key] = value;\n        } else {\n            throw new Error('The defaults decorator takes either a single object as an argument or a key and value');\n        }\n        target.prototype.defaults = defaults;\n    };\n}\n\n//Router\n\nexport function route(routeName) {\n    return function(target, name, descriptor) {\n        if (!target.routes) {\n            target.routes = {};\n        }\n        if (_.isFunction(target.routes)) {\n            throw new Error('The route decorator is not compatible with a route method');\n            return;\n        }\n        if (!routeName) {\n            throw new Error('The route decorator requires an route string argument');\n        }\n        target.routes[routeName] = name;\n        return descriptor;\n    };\n}\n\n// Marionette Decorators\n\n// Views\n\nexport function onModel(eventName) {\n    return function(target, name, descriptor) {\n        if (!target.modelEvents) {\n            target.modelEvents = {};\n        }\n        if (_.isFunction(target.modelEvents)) {\n            throw new Error('The onModel decorator is not compatible with a modelEvents method');\n            return;\n        }\n        if (!eventName) {\n            throw new Error('The onModel decorator requires an eventName argument');\n        }\n        target.modelEvents[eventName] = name;\n        return descriptor;\n    };\n}\n\nexport function onCollection(eventName) {\n    return function(target, name, descriptor) {\n        if (!target.collectionEvents) {\n            target.collectionEvents = {};\n        }\n        if (_.isFunction(target.collectionEvents)) {\n            throw new Error('The onCollection decorator is not compatible with a collectionEvents method');\n            return;\n        }\n        if (!eventName) {\n            throw new Error('The onCollection decorator requires an eventName argument');\n        }\n        target.collectionEvents[eventName] = name;\n        return descriptor;\n    };\n}\n\nexport function template(value) {\n    return function decorator(target) {\n        target.prototype.template = value;\n    };\n}\n\nexport function childView(value) {\n    return function decorator(target) {\n        target.prototype.childView = value;\n    };\n}\n\nexport function childViewContainer(value) {\n    return function decorator(target) {\n        target.prototype.childViewContainer = value;\n    };\n}\n\nexport function ui(...args) {\n    return function decorator(target) {\n        let ui = target.prototype.ui || {};\n        let [key, value] = args;\n        if (_.isObject(key)) {\n            _.extend(ui, args[0]);\n        } else if (_.isString(key) && _.isString(value)) {\n            ui[key] = value;\n        } else {\n            throw new Error('The ui decorator takes either a single object as an argument or a key and value string');\n        }\n        target.prototype.ui = ui;\n    };\n}\n\n// Utility Decorators\n\nexport function useSuper(target, name, descriptor) {\n    let superMethod = Object.getPrototypeOf(target)[name];\n    if (_.isFunction(superMethod)) {\n        descriptor.value = function(...args) {\n            superMethod.apply(this, args);\n        };\n    } else {\n        throw new Error('The useSuper method requires the parent class to implement this function somewhere on its prototype chain');\n    }\n    return descriptor;\n}\n\n//Backbone.LocalStorage Decorators\n\nexport function localStorage(storageKey) {\n    return function decorator(target) {\n        if (Backbone.LocalStorage) {\n            if (_.isString(storageKey)) {\n                target.prototype.localStorage = new Backbone.LocalStorage(storageKey);\n            } else {\n                throw new Error('The localStorage decorator requires a single string argument which will serve as the localStorage key');\n            }\n        } else {\n            throw new Error('The localStorage decorator requires Backbone.LocalStorage to have been loaded before use');\n        }\n    };\n}\n\n//Marionette-service Decorators\n\nexport function replyRadio(channel, requestString) {\n    return function(target, name, descriptor) {\n        if (!target.radioRequests) {\n            target.radioRequests = {};\n        }\n        if (_.isFunction(target.radioRequests)) {\n            throw new Error('The replyRadio decorator is not compatible with a radioRequests method');\n            return;\n        }\n        if (!_.isString(channel) || !_.isString(requestString)) {\n            throw new Error('The replyRadio decorator requires 2 arguments, a channel and a request string.');\n        }\n        target.radioRequests[channel + ' ' + requestString] = name;\n        return descriptor;\n    };\n}\n",null],"sourceRoot":"/source/"}